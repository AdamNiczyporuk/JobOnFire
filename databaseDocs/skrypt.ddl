-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2025-04-14 12:20:39 CEST
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE additionalcredentials (
    userid   NUMBER NOT NULL,
    provider VARCHAR2(4000),
    value    VARCHAR2(4000)
);

ALTER TABLE additionalcredentials ADD CONSTRAINT additionalcredentials_pk PRIMARY KEY ( userid );

CREATE TABLE applicationforjoboffer (
    id                 NUMBER NOT NULL,
    message            VARCHAR2(4000),
    status             VARCHAR2(4000) NOT NULL,
    candidateprofileid NUMBER NOT NULL,
    jobofferid         NUMBER NOT NULL,
    cvid               NUMBER NOT NULL
);

CREATE INDEX applicationforjoboffer__idx ON
    applicationforjoboffer (
        candidateprofileid
    ASC );

CREATE INDEX applicationforjoboffer__idxv1 ON
    applicationforjoboffer (
        jobofferid
    ASC );

ALTER TABLE applicationforjoboffer ADD CONSTRAINT applicationforjoboffer_pk PRIMARY KEY ( id );

CREATE TABLE applicationresponse (
    response                 VARCHAR2(4000),
    applicationforjobofferid NUMBER NOT NULL
);

ALTER TABLE applicationresponse ADD CONSTRAINT applicationresponse_pk PRIMARY KEY ( applicationforjobofferid );

CREATE TABLE candidateanswer (
    answer                   VARCHAR2(4000),
    applicationforjobofferid NUMBER NOT NULL,
    recruitmentquestionid    NUMBER NOT NULL
);

-- Error - Index CandidateAnswer__IDX has no columns

ALTER TABLE candidateanswer ADD CONSTRAINT candidateanswer_pk PRIMARY KEY ( applicationforjobofferid,
                                                                            recruitmentquestionid );

CREATE TABLE candidatecv (
    id                 NUMBER NOT NULL,
    cvjson             VARCHAR2(4000),
    candidateprofileid NUMBER NOT NULL,
    cvurl              VARCHAR2(4000),
    name               VARCHAR2(4000)
);

ALTER TABLE candidatecv ADD CONSTRAINT candidatecv_pk PRIMARY KEY ( id );

CREATE TABLE candidateprofile (
    id          NUMBER NOT NULL,
    name        VARCHAR2(4000),
    lastname    VARCHAR2(4000),
    description VARCHAR2(4000),
    birthday    DATE,
    experience  VARCHAR2(4000),
    phonenumber NUMBER,
    skills      VARCHAR2(4000),
    place       VARCHAR2(4000),
    education   VARCHAR2(4000),
    userid      NUMBER NOT NULL
);

ALTER TABLE candidateprofile ADD CONSTRAINT candidateprofile_pk PRIMARY KEY ( id );

ALTER TABLE candidateprofile ADD CONSTRAINT candidateprofile__un UNIQUE ( userid );

CREATE TABLE employerprofile (
    id              NUMBER NOT NULL,
    companyname     VARCHAR2(4000),
    companyimageurl VARCHAR2(4000),
    industry        VARCHAR2(4000),
    description     VARCHAR2(4000),
    contracttype    VARCHAR2(4000),
    contactphone    VARCHAR2(4000),
    contactemail    VARCHAR2(4000),
    benefits        VARCHAR2(4000),
    userid          NUMBER NOT NULL
);

ALTER TABLE employerprofile ADD CONSTRAINT employerprofile_pk PRIMARY KEY ( id );

ALTER TABLE employerprofile ADD CONSTRAINT employerprofile__un UNIQUE ( userid );

CREATE TABLE externaljoboffer (
    id                 NUMBER NOT NULL,
    url                VARCHAR2(4000) NOT NULL,
    site               VARCHAR2(4000),
    name               VARCHAR2(4000) NOT NULL,
    company            VARCHAR2(4000),
    candidateprofileid NUMBER NOT NULL
);

ALTER TABLE externaljoboffer ADD CONSTRAINT externaljoboffer_pk PRIMARY KEY ( id );

CREATE TABLE joboffer (
    id                NUMBER NOT NULL,
    name              VARCHAR2(4000) NOT NULL,
    description       VARCHAR2(4000),
    joblevel          VARCHAR2(4000),
    contracttype      VARCHAR2(4000),
    salary            VARCHAR2(4000),
    createdate        DATE NOT NULL,
    expiredate        DATE NOT NULL,
    workingmode       VARCHAR2(4000),
    workload          VARCHAR2(4000),
    responsibilities  VARCHAR2(4000),
    requirements      VARCHAR2(4000),
    whatweoffer       VARCHAR2(4000),
    applicationurl    VARCHAR2(4000),
    lokalizationid    NUMBER NOT NULL,
    employerprofileid NUMBER NOT NULL
);

ALTER TABLE joboffer ADD CONSTRAINT joboffer_pk PRIMARY KEY ( id );

CREATE TABLE lokalization (
    id         NUMBER NOT NULL,
    city       VARCHAR2(4000),
    state      VARCHAR2(4000),
    street     VARCHAR2(4000),
    postalcode VARCHAR2(4000),
    latitude   NUMBER,
    longtitude NUMBER
);

ALTER TABLE lokalization ADD CONSTRAINT lokalization_pk PRIMARY KEY ( id );

CREATE TABLE lokalizationtoemployerprofile (
    employerprofile_id NUMBER NOT NULL,
    lokalization_id    NUMBER NOT NULL
);

--  ERROR: PK name length exceeds maximum allowed length(30) 
ALTER TABLE lokalizationtoemployerprofile ADD CONSTRAINT lokalizationtoemployerprofile_pk PRIMARY KEY ( employerprofile_id,
                                                                                                        lokalization_id );

CREATE TABLE meeting (
    id                       NUMBER NOT NULL,
    datetime                 DATE NOT NULL,
    type                     VARCHAR2(4000) NOT NULL,
    contributors             VARCHAR2(4000),
    onlinemeetingurl         VARCHAR2(4000),
    message                  VARCHAR2(4000),
    applicationforjobofferid NUMBER NOT NULL
);

ALTER TABLE meeting ADD CONSTRAINT meeting_pk PRIMARY KEY ( id );

CREATE TABLE profilelink (
    id                 NUMBER NOT NULL,
    name               VARCHAR2(4000) NOT NULL,
    url                VARCHAR2(4000) NOT NULL,
    candidateprofileid NUMBER NOT NULL
);

ALTER TABLE profilelink ADD CONSTRAINT profilelink_pk PRIMARY KEY ( id );

CREATE TABLE recruitmentquestion (
    id         NUMBER NOT NULL,
    question   VARCHAR2(4000),
    jobofferid NUMBER NOT NULL
);

ALTER TABLE recruitmentquestion ADD CONSTRAINT recruitmentquestion_pk PRIMARY KEY ( id );

CREATE TABLE "User" (
    id           NUMBER NOT NULL,
    username     VARCHAR2(4000) NOT NULL,
    email        VARCHAR2(4000) NOT NULL,
    passwordhash VARCHAR2(4000) NOT NULL,
    role         VARCHAR2(4000) NOT NULL,
    registerdate DATE NOT NULL,
    isdeleted    NUMBER NOT NULL
);

ALTER TABLE "User" ADD CONSTRAINT user_pk PRIMARY KEY ( id );

ALTER TABLE additionalcredentials
    ADD CONSTRAINT additionalcredentials_user_fk FOREIGN KEY ( userid )
        REFERENCES "User" ( id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE applicationforjoboffer
    ADD CONSTRAINT applicationforjoboffer_candidateprofile_fk FOREIGN KEY ( candidateprofileid )
        REFERENCES candidateprofile ( id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE applicationforjoboffer
    ADD CONSTRAINT applicationforjoboffer_generatedcv_fk FOREIGN KEY ( id )
        REFERENCES candidatecv ( id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE applicationforjoboffer
    ADD CONSTRAINT applicationforjoboffer_joboffer_fk FOREIGN KEY ( jobofferid )
        REFERENCES joboffer ( id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE applicationresponse
    ADD CONSTRAINT applicationresponse_applicationforjoboffer_fk FOREIGN KEY ( applicationforjobofferid )
        REFERENCES applicationforjoboffer ( id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE candidateanswer
    ADD CONSTRAINT candidateanswer_applicationforjoboffer_fk FOREIGN KEY ( applicationforjobofferid )
        REFERENCES applicationforjoboffer ( id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE candidateanswer
    ADD CONSTRAINT candidateanswer_recruitmentquestion_fk FOREIGN KEY ( recruitmentquestionid )
        REFERENCES recruitmentquestion ( id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE candidatecv
    ADD CONSTRAINT candidatecv_candidateprofile_fk FOREIGN KEY ( candidateprofileid )
        REFERENCES candidateprofile ( id );

ALTER TABLE candidateprofile
    ADD CONSTRAINT candidateprofile_user_fk FOREIGN KEY ( userid )
        REFERENCES "User" ( id );

ALTER TABLE employerprofile
    ADD CONSTRAINT employerprofile_user_fk FOREIGN KEY ( userid )
        REFERENCES "User" ( id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE externaljoboffer
    ADD CONSTRAINT externaljoboffer_candidateprofile_fk FOREIGN KEY ( candidateprofileid )
        REFERENCES candidateprofile ( id );

ALTER TABLE joboffer
    ADD CONSTRAINT joboffer_employerprofile_fk FOREIGN KEY ( employerprofileid )
        REFERENCES employerprofile ( id );

ALTER TABLE joboffer
    ADD CONSTRAINT joboffer_lokalization_fk FOREIGN KEY ( lokalizationid )
        REFERENCES lokalization ( id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE lokalizationtoemployerprofile
    ADD CONSTRAINT lokalizationtoemployerprofile_employerprofile_fk FOREIGN KEY ( employerprofile_id )
        REFERENCES employerprofile ( id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE lokalizationtoemployerprofile
    ADD CONSTRAINT lokalizationtoemployerprofile_lokalization_fk FOREIGN KEY ( lokalization_id )
        REFERENCES lokalization ( id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE meeting
    ADD CONSTRAINT meeting_applicationforjoboffer_fk FOREIGN KEY ( applicationforjobofferid )
        REFERENCES applicationforjoboffer ( id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE profilelink
    ADD CONSTRAINT profilelink_candidateprofile_fk FOREIGN KEY ( candidateprofileid )
        REFERENCES candidateprofile ( id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE recruitmentquestion
    ADD CONSTRAINT recruitmentquestion_joboffer_fk FOREIGN KEY ( jobofferid )
        REFERENCES joboffer ( id );

CREATE SEQUENCE applicationforjoboffer_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER applicationforjoboffer_id_trg BEFORE
    INSERT ON applicationforjoboffer
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := applicationforjoboffer_id_seq.nextval;
END;
/

CREATE SEQUENCE applicationresponse_applicatio START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER applicationresponse_applicatio BEFORE
    INSERT ON applicationresponse
    FOR EACH ROW
    WHEN ( new.applicationforjobofferid IS NULL )
BEGIN
    :new.applicationforjobofferid := applicationresponse_applicatio.nextval;
END;
/

CREATE SEQUENCE candidateprofile_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER candidateprofile_id_trg BEFORE
    INSERT ON candidateprofile
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := candidateprofile_id_seq.nextval;
END;
/

CREATE SEQUENCE employerprofile_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER employerprofile_id_trg BEFORE
    INSERT ON employerprofile
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := employerprofile_id_seq.nextval;
END;
/

CREATE SEQUENCE joboffer_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER joboffer_id_trg BEFORE
    INSERT ON joboffer
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := joboffer_id_seq.nextval;
END;
/

CREATE SEQUENCE lokalization_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER lokalization_id_trg BEFORE
    INSERT ON lokalization
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := lokalization_id_seq.nextval;
END;
/

CREATE SEQUENCE meeting_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER meeting_id_trg BEFORE
    INSERT ON meeting
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := meeting_id_seq.nextval;
END;
/

CREATE SEQUENCE recruitmentquestion_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER recruitmentquestion_id_trg BEFORE
    INSERT ON recruitmentquestion
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := recruitmentquestion_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            15
-- CREATE INDEX                             2
-- ALTER TABLE                             35
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           8
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          8
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                  15
-- WARNINGS                                 0
